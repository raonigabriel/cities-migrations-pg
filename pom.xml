<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.raonigabriel</groupId>
	<artifactId>cities-migrations-pg</artifactId>
	<version>1.1.0</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<junit.version>4.13.2</junit.version>
		<flyway.version>8.5.2</flyway.version>
		<postgresql.version>42.3.3</postgresql.version>
		<testcontainers.postgresql.version>1.16.3</testcontainers.postgresql.version>
		<logback.classic.version>1.2.11</logback.classic.version>
		<docker.registry>ghcr.io/</docker.registry>
		<docker.project.id>raonigabriel/${project.artifactId}</docker.project.id>
		<docker.image.tag>${project.version}</docker.image.tag>
		<docker.image.name>${docker.registry}${docker.project.id}:${docker.image.tag}</docker.image.name>
	</properties>

	<developers>
		<developer>
			<id>raonigabriel</id>
			<name>Raoni Gabriel</name>
			<email>raonigabriel@gmail.com</email>
			<timezone>-3</timezone>
			<roles>
				<role>Java Developer</role>
			</roles>
		</developer>
	</developers>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-core</artifactId>
				<version>${flyway.version}</version>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>postgresql</artifactId>
				<version>${testcontainers.postgresql.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.classic.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<!-- Skips the default execution of compilation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<!-- Skips the default execution of unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<!-- Builds the docker image (requires docker to be installed) -->
					<execution>
						<phase>package</phase>
						<id>build-docker-image</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<workingDirectory>${project.basedir}</workingDirectory>
							<executable>docker</executable>
							<arguments>
								<argument>build</argument>
								<argument>.</argument>
								<argument>-t</argument>
								<argument>${docker.image.name}</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Test our docker image (using container-structure-test, inside a 
						docker image!) -->
					<execution>
						<phase>pre-integration-test</phase>
						<id>verify-docker-image</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<workingDirectory>${project.basedir}</workingDirectory>
							<executable>docker</executable>
							<arguments>
								<argument>run</argument>
								<argument>--rm</argument>
								<argument>-t</argument>
								<argument>-v</argument>
								<argument>/var/run/docker.sock:/var/run/docker.sock</argument>
								<argument>-v</argument>
								<argument>${project.basedir}/src/test/resources/structure-tests.yaml:/tmp/structure-tests.yaml</argument>
								<argument>gcr.io/gcp-runtimes/container-structure-test</argument>
								<argument>test</argument>
								<argument>--image</argument>
								<argument>${docker.image.name}</argument>
								<argument>--config</argument>
								<argument>/tmp/structure-tests.yaml</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Pushes the docker image (requires previous docker login) -->
					<execution>
						<phase>deploy</phase>
						<id>push-docker-image</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<workingDirectory>${project.basedir}</workingDirectory>
							<executable>docker</executable>
							<arguments>
								<argument>image</argument>
								<argument>push</argument>
								<argument>${docker.image.name}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.10.0</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
